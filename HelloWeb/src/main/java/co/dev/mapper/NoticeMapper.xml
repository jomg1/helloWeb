<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.dev.mapper.NoticeMapper">

<!-- id:메소드 이름 resultType:반환되는 타입 위치도 함께 작성 -->
  <select id="noticeList" resultType="co.dev.vo.NoticeVO">
    select * from notice order by notice_id desc
  </select>
  
   <!-- 크다 작다 연산자를 사용하려면 CDATA 안에 쿼리문 넣어줌 -->
  <select id="noticeListWithPaging" resultType="co.dev.vo.NoticeVO" parameterType="int">
	  <![CDATA[
		select notice_id, notice_writer, notice_title, create_date
		from(select rownum rn, notice_id, notice_writer, notice_title, create_date
		from(select notice_id, notice_writer, notice_title, create_date
			 from notice
			 order by notice_id desc) a
			 where rownum <= (#{page} * 10)) b
		 where b.rn > (#{page} - 1) * 10
	  ]]>
	  
  </select>
  
  <!-- 값을 넣을 때는 파라미터 타입 -->
  <insert id="insertNotice" parameterType="co.dev.vo.NoticeVO">
  insert into notice (notice_id, notice_writer, notice_title, notice_subject, attach)
values(notice_seq.nextval,#{noticeWriter},#{noticeTitle},#{noticeSubject}, #{attach})
  </insert>
  
  <select id="selectNotice" resultType="co.dev.vo.NoticeVO" parameterType="int">
    select * from notice where notice_id = #{nid} <!-- nid가 파라미터 이름 -->
  </select>
  
  <update id="updateCount" parameterType="int">
    update notice set hit_count = hit_count + 1
    where notice_id = #{nid}
  </update>
  
  <select id="getTotalCount" resultType="int">
    select count(*) from notice
  </select>
  
  <update id="updateNotice" parameterType="co.dev.vo.NoticeVO">
  	update notice
	set notice_title = #{noticeTitle},
	notice_subject = #{noticeSubject}
	where notice_id = #{noticeId}
  </update>
  
  <!-- int값은 선언한 적 없으므로 NoticeMapper.java에 선언한 매개값을 사용하면 된다 -->
  <delete id="noticeRemove" parameterType="int" >
  	delete from notice
  	where notice_id = #{nid}
  </delete>
  
  
</mapper>